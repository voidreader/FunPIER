using UnityEngine;
using System.IO;
using System.Xml.Serialization;
using UnityEngine.SceneManagement;

namespace PlatformerPro
{ 
    /// <summary>
    /// Loads scene data from scene manager data and if present it will load the saved scene.
    /// </summary>
    public class LastSceneLoader : MonoBehaviour
    {

        /// <summary>
        /// Name of the scene to load if there is no saved scene name.
        /// </summary>
        public string defaultSceneName;

        public void Load()
        {
            string sceneName = LoadSavedData();
            if (sceneName != null && sceneName != "")
            {
                SceneManager.LoadScene(sceneName);
            }
            else
            {
                SceneManager.LoadScene(defaultSceneName);
            }
        }

        protected static string LoadSavedData()
        {
            // This needs to match the id generated by a LevelManager
            string prefsId = string.Format("{0}_{1}_{2}", Persistable.BasePlayerPrefId, LevelManager.PLAYER_PREF_KEY, 0);
            string data = PlayerPrefs.GetString(prefsId, "");
            if (data.Length > 0)
            {
                using (StringReader reader = new StringReader(data))
                {
                    XmlSerializer serializer = new XmlSerializer(typeof(LevelManagerData));
                    object savedObject = serializer.Deserialize(reader);
                    return ((LevelManagerData)savedObject).lastEnteredScene;
                }
            }
            return null;
        }
    }
}